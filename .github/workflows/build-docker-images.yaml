name: Build Docker Images
on:
  push:
    branches:
      - main
    paths:
      - 'images/**'
      - 'examples/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  change-detection:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.filter.outputs.images }}
      examples: ${{ steps.filter.outputs.examples }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          images:
            - 'images/**'
          examples:
            - 'examples/**'

  build-base-images:
    env:
      DOCKER_BUILD_SUMMARY: "false"
    needs: change-detection
    permissions:
      packages: write
    strategy:
      matrix:
        include:
          - image: ubuntu
            platform: linux/arm64
            runs-on: ubuntu-24.04-arm
          - image: rbpi
            platform: linux/arm64
            runs-on: ubuntu-24.04-arm
          # If you have images that do not require a platform flag, set platform to an empty string:
          # - image: some-other-image
          #   platform: ""
          #   runs-on: ubuntu-latest
      fail-fast: false

    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Check out source code
        if: ${{ needs.change-detection.outputs.images == 'true' }}
        uses: actions/checkout@v4

      - name: Set up QEMU
        if: ${{ needs.change-detection.outputs.images == 'true' }}
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        if: ${{ needs.change-detection.outputs.images == 'true' }}
        uses: docker/setup-buildx-action@v3

      - name: Lowercase Registry
        if: ${{ needs.change-detection.outputs.images == 'true' }}
        id: registry_case
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.repository }}

      - name: Log in to GitHub Container Registry
        if: ${{ needs.change-detection.outputs.images == 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Build and push
        if: ${{ needs.change-detection.outputs.images == 'true' }}
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: ${{ matrix.platform }}
          tags: ghcr.io/${{ steps.registry_case.outputs.lowercase }}/${{ matrix.image }}-os:latest
          context: images/${{ matrix.image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  build-disk-images:
    env:
      DOCKER_BUILD_SUMMARY: "false"
    needs:
      - build-base-images
      - change-detection
    if: ${{ needs.change-detection.outputs.images == 'true' || needs.change-detection.outputs.examples == 'true' }}
    permissions:
      packages: write
    strategy:
      matrix:
        include:
          - image: ubuntu
            platform: linux/arm64
            runs-on: ubuntu-24.04-arm
          - image: rbpi
            platform: linux/arm64
            runs-on: ubuntu-24.04-arm
          # If you have images that do not require a platform flag, set platform to an empty string:
          # - image: some-other-image
          #   platform: ""
          #   runs-on: ubuntu-latest
      fail-fast: false

    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Check out source code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.repository }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: ${{ matrix.platform }}
          tags: ghcr.io/${{ steps.registry_case.outputs.lowercase }}/example-${{ matrix.image }}-os:latest
          context: examples/${{ matrix.image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Disk Image
        run: |
          docker run --rm --platform ${{ matrix.platform }} --entrypoint /bin/sh -v /build:/output ghcr.io/rancher/elemental-toolkit/elemental-cli:v2.2.0 -c "elemental build-disk --squash-no-compression --system ghcr.io/${{ steps.registry_case.outputs.lowercase }}/example-${{ matrix.image }}-os --config-dir /config --output /build --expandable --debug -n ${{ matrix.image }} && mv /build/${{ matrix.image }}.raw /output/"

      - uses: actions/upload-artifact@v4
        with:
          name: example-${{ matrix.image }}-os
          path: /build/${{ matrix.image }}.raw
          compression-level: 3

